datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
}

model Mails {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  body        String
  type        String
  isGranted   Boolean  @default(false)
  authorEmail String?
  author      Users?   @relation(fields: [authorId], references: [id])
  authorId    String?  @db.ObjectId
  createdAt   DateTime @default(now())
  time        String
}

model Products {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  body        String
  image       Bytes?
  mrp         Int      @default(0)
  cost        Int      @default(0)
  discount    Int      @default(0)
  tagLine     String?
  orders      Orders[]
  brand       String?
  authorEmail String?
  author      Users?   @relation(fields: [authorId], references: [id])
  authorId    String?  @db.ObjectId
  createdAt   DateTime @default(now())
  time        String
  likes       Int      @default(0)
}

model Orders {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  Users      Users?    @relation(fields: [usersId], references: [id])
  usersId    String?   @db.ObjectId
  Products   Products? @relation(fields: [productsId], references: [id])
  productsId String?   @db.ObjectId
  createdAt  DateTime  @default(now())
  time       String
}

model Users {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  email      String        @unique
  password   String?
  role       Role          @default(USER)
  plan       Plan          @default(FREE)
  isAdmin    Boolean       @default(false)
  isVerified Boolean       @default(false)
  isBan      Boolean       @default(false)
  image      String
  address    Address?
  product    Products[]
  orders     Orders[]
  mails      Mails[]
  logs       WebsiteLogs[]
  time       String
  createdAt  DateTime      @default(now())
}

type Address {
  street String
  city   String
  state  String
  zip    String
}

enum Role {
  USER
  ADMIN
}

enum Plan {
  FREE
  PRO
}

model WebsiteLogs {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  timestamp    DateTime @default(now())
  logType      String
  message      String
  ipAddress    String?
  userAgent    String?
  errorCode    Int?
  endpoint     String?
  requestBody  String?
  responseBody String?
  duration     Float?
  Users        Users?   @relation(fields: [usersId], references: [id])
  usersId      String?  @db.ObjectId
}
